{"ast":null,"code":"var _jsxFileName = \"/Users/jaehyuk_2/Desktop/ds_study/AI_chat_supporter_react_nodejs/nodeapp/src/reactapp/src/public/JSX/ChatPage/ChatFrame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport '../../CSS/ChatFrame.css';\nimport io from 'socket.io-client';\nimport InfoBar from \"./InfoBar\";\nimport MessageContainer from \"./MessageContainer\";\nimport TextContainer from \"./TextContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatFrame(props) {\n  _s();\n  console.log('ChatFrame Rerendered');\n  const [messages, setMessages] = useState([]);\n  const [roomName, setRoomName] = useState(props.roomName);\n  const [nickName, setNickName] = useState(props.nickName);\n  console.log('ChatFrame roomName>>', roomName);\n  console.log('ChatFrame nickName>>', nickName);\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = io('http://192.168.0.113:5050');\n    socket.current.on('connect', () => {\n      console.log('Connected to server');\n      // 룸 입장 emit\n      socket.current.emit('enter_room', nickName, roomName);\n    });\n\n    // 서버 메세지 대기\n    socket.current.on('reply', (reply_message, nickName) => {\n      console.log('From server ::', reply_message);\n\n      // 채팅 메세지 업데이트\n      setMessages(prevMessages => [...prevMessages, {\n        nickName: nickName,\n        text: reply_message\n      }]);\n    });\n    return () => {\n      socket.current.disconnect(); // 컴포넌트 언마운트 시 연결 종료\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatFrame\",\n    children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n      roomName: roomName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MessageContainer, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      socket: socket,\n      setMessages: setMessages,\n      nickName: nickName,\n      roomName: roomName,\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n}\n_s(ChatFrame, \"JJW/pToXJpYwwljOcWt4HU8wwnI=\");\n_c = ChatFrame;\n;\nvar _c;\n$RefreshReg$(_c, \"ChatFrame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","InfoBar","MessageContainer","TextContainer","jsxDEV","_jsxDEV","ChatFrame","props","_s","console","log","messages","setMessages","roomName","setRoomName","nickName","setNickName","socket","current","on","emit","reply_message","prevMessages","text","disconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaehyuk_2/Desktop/ds_study/AI_chat_supporter_react_nodejs/nodeapp/src/reactapp/src/public/JSX/ChatPage/ChatFrame.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"\n\nimport '../../CSS/ChatFrame.css';\nimport io from 'socket.io-client';\nimport InfoBar from \"./InfoBar\"\nimport MessageContainer from \"./MessageContainer\"\nimport TextContainer from \"./TextContainer\"\n\nexport default function ChatFrame(props) {\n    \n    console.log('ChatFrame Rerendered');\n    \n    const [messages, setMessages] = useState([]);\n    const [roomName, setRoomName] = useState(props.roomName);\n    const [nickName, setNickName] = useState(props.nickName);\n    \n    \n    console.log('ChatFrame roomName>>',roomName);\n    console.log('ChatFrame nickName>>',nickName);\n\n    const socket = useRef(null);\n    \n    useEffect(() => {\n      socket.current = io('http://192.168.0.113:5050');\n        socket.current.on('connect', () => {\n          console.log('Connected to server');\n          // 룸 입장 emit\n          socket.current.emit('enter_room', nickName, roomName);\n        });\n        \n        // 서버 메세지 대기\n        socket.current.on('reply', (reply_message, nickName) => {\n          console.log('From server ::', reply_message);\n\n          // 채팅 메세지 업데이트\n          setMessages((prevMessages) => [\n            ...prevMessages,\n            { \n              nickName: nickName,\n              text: reply_message,\n            },\n          ]);\n\n\n        });\n    \n        return () => {\n          socket.current.disconnect(); // 컴포넌트 언마운트 시 연결 종료\n        };\n    }, []);\n\n    return (\n            <div className=\"ChatFrame\">\n                <InfoBar roomName={roomName}/>\n                <MessageContainer messages={messages}/>               \n                <TextContainer socket={socket} setMessages={setMessages} nickName={nickName} roomName={roomName} messages={messages}/>\n            </div>\n    );\n    \n};\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAE1D,OAAO,yBAAyB;AAChC,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,aAAa,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAErCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EAEnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAACU,KAAK,CAACM,QAAQ,CAAC;EACxD,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAACU,KAAK,CAACQ,QAAQ,CAAC;EAGxDN,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACG,QAAQ,CAAC;EAC5CJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACK,QAAQ,CAAC;EAE5C,MAAME,MAAM,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACdmB,MAAM,CAACC,OAAO,GAAGlB,EAAE,CAAC,2BAA2B,CAAC;IAC9CiB,MAAM,CAACC,OAAO,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MACjCV,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC;MACAO,MAAM,CAACC,OAAO,CAACE,IAAI,CAAC,YAAY,EAAEL,QAAQ,EAAEF,QAAQ,CAAC;IACvD,CAAC,CAAC;;IAEF;IACAI,MAAM,CAACC,OAAO,CAACC,EAAE,CAAC,OAAO,EAAE,CAACE,aAAa,EAAEN,QAAQ,KAAK;MACtDN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEW,aAAa,CAAC;;MAE5C;MACAT,WAAW,CAAEU,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QACEP,QAAQ,EAAEA,QAAQ;QAClBQ,IAAI,EAAEF;MACR,CAAC,CACF,CAAC;IAGJ,CAAC,CAAC;IAEF,OAAO,MAAM;MACXJ,MAAM,CAACC,OAAO,CAACM,UAAU,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACQnB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBrB,OAAA,CAACJ,OAAO;MAACY,QAAQ,EAAEA;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9BzB,OAAA,CAACH,gBAAgB;MAACS,QAAQ,EAAEA;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvCzB,OAAA,CAACF,aAAa;MAACc,MAAM,EAAEA,MAAO;MAACL,WAAW,EAAEA,WAAY;MAACG,QAAQ,EAAEA,QAAS;MAACF,QAAQ,EAAEA,QAAS;MAACF,QAAQ,EAAEA;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrH,CAAC;AAGlB;AAACtB,EAAA,CAnDuBF,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAmDhC;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}