{"ast":null,"code":"var _jsxFileName = \"/Users/jaehyuk_2/Desktop/ds_study/AI_chat_supporter_react_nodejs/nodeapp/src/reactapp/src/public/JSX/ChatListPage/ChatListPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport '../../CSS/ChatListPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatListPage() {\n  _s();\n  var _location$state;\n  const [rooms, setRooms] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // 사용자 닉네임 확인\n  console.log((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.nickName);\n\n  // 미리 방을 설정\n  useEffect(() => {\n    setRooms([{\n      id: 1,\n      name: '채팅방 이름 1',\n      count: 0,\n      maxCount: 3\n    }, {\n      id: 2,\n      name: '채팅방 이름 2',\n      count: 0,\n      maxCount: 3\n    }, {\n      id: 3,\n      name: '채팅방 이름 3',\n      count: 0,\n      maxCount: 3\n    }, {\n      id: 4,\n      name: '채팅방 이름 4',\n      count: 0,\n      maxCount: 3\n    }, {\n      id: 5,\n      name: '채팅방 이름 5',\n      count: 0,\n      maxCount: 3\n    }, {\n      id: 6,\n      name: '채팅방 이름 6',\n      count: 0,\n      maxCount: 3\n    }]);\n  }, []);\n  useEffect(() => {\n    async function fetchRooms() {\n      fetch('http://192.168.0.113:5000/chatList', {\n        method: \"GET\"\n      }).then(response => response.json()).then(data => setRooms(data));\n    }\n    fetchRooms();\n  }, []);\n\n  // 방을 클릭하면 채팅 페이지로 이동\n  function handleSelectRoom(room) {\n    if (room.count < room.maxCount) {\n      var _location$state2;\n      navigate(`/chatPage/${room.name}`, {\n        state: {\n          'roomName': room.name,\n          'nickName': (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.nickName\n        }\n      });\n    } else {\n      alert('방이 꽉 찼습니다..');\n    }\n  }\n\n  // 방 추가 기능\n  const handleAddRoom = () => {\n    const newRoomId = rooms.length + 1;\n    const newRoom = {\n      id: newRoomId,\n      name: `채팅방 이름 ${newRoomId}`,\n      count: 0,\n      maxCount: 3 // 여기서 최대 인원을 설정할 수 있습니다.\n    };\n    setRooms(prevRooms => [...prevRooms, newRoom]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatListPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uCC44\\uD305\\uBC29 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleSelectRoom(room),\n      className: `room ${room.count >= room.maxCount ? 'full' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: room.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [room.count, \"/\", room.maxCount, \", \", room.count, \"\\uBA85 \\uC811\\uC18D\\uC911\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, room.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-room-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRoom,\n        children: \"\\uBC29 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n// import React, { useEffect, useState } from \"react\"\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import '../../CSS/ChatListPage.css';\n\n// export default function ChatListPage() {\n\n//     const [rooms, setRooms] = useState([]);\n\n//     const location = useLocation();\n//     const navigate = useNavigate();\n\n//     console.log(location.state.nickName);\n\n//     useEffect(() => {\n//         async function fetchRooms() {\n//             fetch('http://192.168.0.113:5000/chatList', {\n//                 method: \"GET\",\n//             })\n//             .then((response) => response.json())\n//             .then((data) => \n//                     setRooms(data)\n//                 )\n//         }\n//         fetchRooms();\n\n//     }, []);\n\n//     const handleAddRoom = () => {\n\n//         setRooms((prevRooms) => [...prevRooms, { id : 3,\n//             name: 'room3',  \n//             count: 3,\n//             maxCount: 6,}]);\n//     }\n\n//     function handleSelectRoom (room){\n\n//         console.log('handleSelectRoom >> come');\n//         navigate(`/chatPage/${room.name}`, {state:{'roomName':room.name, 'nickName' : location.state.nickName }});\n//     }\n\n//     return (\n//         <div className=\"ChatListPage\">\n//             <button onClick={handleAddRoom}>방 추가</button>\n\n//             {rooms.map((room) => (\n//                 <div key={room.id} onClick={()=>handleSelectRoom(room)}>\n//                     <h3>id: {room.id}, Room name:{room.name} </h3> \n//                     <h5  key={room} >{room.count}/{room.maxCount}</h5>\n//                 </div>\n//             ))}\n//         </div>\n//     )\n// }\n_s(ChatListPage, \"K5AU2QbCRLoazVjgXHa8agtGRzo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ChatListPage;\nvar _c;\n$RefreshReg$(_c, \"ChatListPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","ChatListPage","_s","_location$state","rooms","setRooms","location","navigate","console","log","state","nickName","id","name","count","maxCount","fetchRooms","fetch","method","then","response","json","data","handleSelectRoom","room","_location$state2","alert","handleAddRoom","newRoomId","length","newRoom","prevRooms","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/Users/jaehyuk_2/Desktop/ds_study/AI_chat_supporter_react_nodejs/nodeapp/src/reactapp/src/public/JSX/ChatListPage/ChatListPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport '../../CSS/ChatListPage.css'\n\nexport default function ChatListPage() {\n\n    const [rooms, setRooms] = useState([]);\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    // 사용자 닉네임 확인\n    console.log(location.state?.nickName);\n\n    // 미리 방을 설정\n    useEffect(() => {\n        setRooms([\n            { id: 1, name: '채팅방 이름 1', count: 0, maxCount: 3 },\n            { id: 2, name: '채팅방 이름 2', count: 0, maxCount: 3 },\n            { id: 3, name: '채팅방 이름 3', count: 0, maxCount: 3 },\n            { id: 4, name: '채팅방 이름 4', count: 0, maxCount: 3 },\n            { id: 5, name: '채팅방 이름 5', count: 0, maxCount: 3 },\n            { id: 6, name: '채팅방 이름 6', count: 0, maxCount: 3 },\n        ]);\n    }, []);\n\n    useEffect(() => {\n        async function fetchRooms() {\n            fetch('http://192.168.0.113:5000/chatList', {\n                method: \"GET\",\n        })\n            .then((response) => response.json())\n            .then((data) => \n            setRooms(data)\n            )\n        }\n        fetchRooms();\n\n    }, []);\n\n    // 방을 클릭하면 채팅 페이지로 이동\n    function handleSelectRoom(room) {\n        if (room.count < room.maxCount) {\n            navigate(`/chatPage/${room.name}`, {\n                state: { 'roomName': room.name, 'nickName': location.state?.nickName }\n            });\n        } else {\n            alert('방이 꽉 찼습니다..');\n        }\n    }\n\n    // 방 추가 기능\n    const handleAddRoom = () => {\n        const newRoomId = rooms.length + 1;\n        const newRoom = {\n            id: newRoomId,\n            name: `채팅방 이름 ${newRoomId}`,\n            count: 0,\n            maxCount: 3,  // 여기서 최대 인원을 설정할 수 있습니다.\n        };\n        setRooms((prevRooms) => [...prevRooms, newRoom]);\n    }\n\n    return (\n        <div className=\"chatListPage\">\n            <h2>채팅방 목록</h2>\n            {rooms.map((room) => (\n                <div \n                    key={room.id} \n                    onClick={() => handleSelectRoom(room)} \n                    className={`room ${room.count >= room.maxCount ? 'full' : ''}`}\n                >\n                    <h3>{room.name}</h3>\n                    <p>{room.count}/{room.maxCount}, {room.count}명 접속중</p>\n                </div>\n            ))}\n            \n            {/* 방 추가 버튼 */}\n            <div className=\"add-room-section\">\n                <button onClick={handleAddRoom}>방 추가</button>\n            </div>\n        </div>\n    );\n}\n\n\n\n// import React, { useEffect, useState } from \"react\"\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import '../../CSS/ChatListPage.css';\n\n\n// export default function ChatListPage() {\n\n//     const [rooms, setRooms] = useState([]);\n\n//     const location = useLocation();\n//     const navigate = useNavigate();\n\n//     console.log(location.state.nickName);\n\n//     useEffect(() => {\n//         async function fetchRooms() {\n//             fetch('http://192.168.0.113:5000/chatList', {\n//                 method: \"GET\",\n//             })\n//             .then((response) => response.json())\n//             .then((data) => \n//                     setRooms(data)\n//                 )\n//         }\n//         fetchRooms();\n\n//     }, []);\n\n//     const handleAddRoom = () => {\n\n//         setRooms((prevRooms) => [...prevRooms, { id : 3,\n//             name: 'room3',  \n//             count: 3,\n//             maxCount: 6,}]);\n//     }\n\n//     function handleSelectRoom (room){\n\n//         console.log('handleSelectRoom >> come');\n//         navigate(`/chatPage/${room.name}`, {state:{'roomName':room.name, 'nickName' : location.state.nickName }});\n//     }\n    \n//     return (\n//         <div className=\"ChatListPage\">\n//             <button onClick={handleAddRoom}>방 추가</button>\n                        \n//             {rooms.map((room) => (\n//                 <div key={room.id} onClick={()=>handleSelectRoom(room)}>\n//                     <h3>id: {room.id}, Room name:{room.name} </h3> \n//                     <h5  key={room} >{room.count}/{room.maxCount}</h5>\n//                 </div>\n//             ))}\n//         </div>\n//     )\n// }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}