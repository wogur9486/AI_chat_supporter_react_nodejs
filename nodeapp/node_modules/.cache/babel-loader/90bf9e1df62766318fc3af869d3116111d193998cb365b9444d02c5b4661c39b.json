{"ast":null,"code":"var _jsxFileName = \"/Users/jaehyuk_2/Desktop/ds_study/AI_chat_supporter_react_nodejs/nodeapp/src/reactapp/src/public/JSX/ChatPage/TextContainer.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport '../../CSS/TextContainer.css';\nimport { useState } from \"react\";\n\n/*\n    TextContainer에서 보내기 버튼을 누르면 메세지를 서버로 전송해야함\n    이 때 \n    1. 보낸 메세지는 공백처리 > TextContainer 리렌더링\n    2. \n\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextContainer({\n  socket,\n  setMessages,\n  nickName,\n  roomName,\n  messages\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  console.log('TextContainer message >>', message);\n  const handleLocalMessage = event => {\n    setMessage(event.target.value);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n  const handleSubmit = () => {\n    if (message !== '' && message.length !== 0) {\n      socket.current.emit('message', message, roomName);\n      setMessage('');\n      setMessages(prevMessages => [...prevMessages, {\n        nickName: nickName,\n        text: message,\n        user1: true\n      }]);\n    }\n  };\n\n  // const test = ()=>{\n  //     console.log(messages);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TextContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"textinput\",\n      type: \"text\",\n      name: \"message\",\n      value: message,\n      onChange: handleLocalMessage,\n      onKeyDown: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleSubmit,\n      className: \"test1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(TextContainer, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = TextContainer;\nvar _c;\n$RefreshReg$(_c, \"TextContainer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextContainer","socket","setMessages","nickName","roomName","messages","_s","message","setMessage","console","log","handleLocalMessage","event","target","value","handleKeyPress","e","key","handleSubmit","length","current","emit","prevMessages","text","user1","className","children","type","name","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jaehyuk_2/Desktop/ds_study/AI_chat_supporter_react_nodejs/nodeapp/src/reactapp/src/public/JSX/ChatPage/TextContainer.jsx"],"sourcesContent":["import React from \"react\"\nimport '../../CSS/TextContainer.css';\nimport { useState } from \"react\";\n\n/*\n    TextContainer에서 보내기 버튼을 누르면 메세지를 서버로 전송해야함\n    이 때 \n    1. 보낸 메세지는 공백처리 > TextContainer 리렌더링\n    2. \n\n*/\nexport default function TextContainer({ socket, setMessages, nickName, roomName, messages }) {\n    \n    \n    const [message, setMessage] = useState('');\n\n    console.log('TextContainer message >>',message);\n\n\n    const handleLocalMessage = (event) => {\n        setMessage(event.target.value);\n    }\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSubmit();\n        }\n      };\n    \n\n    const handleSubmit = () => {\n\n        if(message !== '' && message.length !== 0){\n            socket.current.emit('message', message, roomName);\n            \n            setMessage('');\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                { \n                  nickName: nickName, \n                  text: message,\n                  user1: true\n                }\n              ]);\n        }\n    }\n    \n    // const test = ()=>{\n    //     console.log(messages);\n    // }\n\n    return (\n        <div className=\"TextContainer\">\n                <input className=\"textinput\"type=\"text\" name=\"message\" value={message} onChange={handleLocalMessage} onKeyDown={handleKeyPress} />\n                <button type=\"button\" onClick={handleSubmit} className=\"test1\"></button>\n                {/* <button type=\"button\" onClick={test} className=\"test2\"></button> */}\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,6BAA6B;AACpC,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,eAAe,SAASC,aAAaA,CAAC;EAAEC,MAAM;EAAEC,WAAW;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAGzF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1CY,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAACH,OAAO,CAAC;EAG/C,MAAMI,kBAAkB,GAAIC,KAAK,IAAK;IAClCJ,UAAU,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC1B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACnBC,YAAY,CAAC,CAAC;IAClB;EACF,CAAC;EAGH,MAAMA,YAAY,GAAGA,CAAA,KAAM;IAEvB,IAAGX,OAAO,KAAK,EAAE,IAAIA,OAAO,CAACY,MAAM,KAAK,CAAC,EAAC;MACtClB,MAAM,CAACmB,OAAO,CAACC,IAAI,CAAC,SAAS,EAAEd,OAAO,EAAEH,QAAQ,CAAC;MAEjDI,UAAU,CAAC,EAAE,CAAC;MACdN,WAAW,CAAEoB,YAAY,IAAK,CAC1B,GAAGA,YAAY,EACf;QACEnB,QAAQ,EAAEA,QAAQ;QAClBoB,IAAI,EAAEhB,OAAO;QACbiB,KAAK,EAAE;MACT,CAAC,CACF,CAAC;IACR;EACJ,CAAC;;EAED;EACA;EACA;;EAEA,oBACIzB,OAAA;IAAK0B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBACtB3B,OAAA;MAAO0B,SAAS,EAAC,WAAW;MAAAE,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC,SAAS;MAACd,KAAK,EAAEP,OAAQ;MAACsB,QAAQ,EAAElB,kBAAmB;MAACmB,SAAS,EAAEf;IAAe;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClInC,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAACQ,OAAO,EAAEjB,YAAa;MAACO,SAAS,EAAC;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3E,CAAC;AAEd;AAAC5B,EAAA,CA/CuBN,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}